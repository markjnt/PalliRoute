name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
          # Für self-hosted Runner: prüfe ob Docker bereits läuft
          install: true
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/backend.Dockerfile
          platforms: linux/amd64,linux/arm64
          # Für noch schnellere Builds: nur linux/amd64 verwenden
          # platforms: linux/amd64
          push: true
          tags: markjnt/palliroute-backend
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Frontend-Web Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/frontend_web.Dockerfile
          platforms: linux/amd64,linux/arm64
          # Für noch schnellere Builds: nur linux/amd64 verwenden
          # platforms: linux/amd64
          push: true
          tags: markjnt/palliroute-frontend-web

  build-frontend-pwa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.0
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Frontend-PWA Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/frontend_pwa.Dockerfile
          platforms: linux/amd64,linux/arm64
          # Für noch schnellere Builds: nur linux/amd64 verwenden
          # platforms: linux/amd64
          push: true
          tags: markjnt/palliroute-frontend-pwa

  deploy:
    runs-on: self-hosted
    needs: [build-backend, build-frontend-web, build-frontend-pwa]
    defaults:
      run:
        working-directory: ~/PalliRoute
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Stop existing containers
        run: docker compose down
      - name: Remove old images
        run: docker rmi $(docker images -q) -f
      - name: Pull latest images
        run: docker compose pull
      - name: Start services
        run: docker compose up -d
      - name: Clean up old images
        run: docker image prune -f