name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-backend-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Backend API Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/backend.Dockerfile
          target: main
          platforms: linux/amd64,linux/arm64
          push: true
          tags: markjnt/palliroute-backend-api
          cache-from: |
            type=registry,ref=docker.io/markjnt/palliroute-backend-api:buildcache
          cache-to: |
            type=registry,ref=docker.io/markjnt/palliroute-backend-api:buildcache,mode=max

  build-backend-scheduler:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Backend Scheduler Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/backend.Dockerfile
          target: scheduler-image
          platforms: linux/amd64,linux/arm64
          push: true
          tags: markjnt/palliroute-backend-scheduler
          cache-from: |
            type=registry,ref=docker.io/markjnt/palliroute-backend-scheduler:buildcache
          cache-to: |
            type=registry,ref=docker.io/markjnt/palliroute-backend-scheduler:buildcache,mode=max

  build-frontend-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Frontend-Web Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/frontend_web.Dockerfile
          platforms: linux/amd64,linux/arm64
          # Für noch schnellere Builds: nur linux/amd64 verwenden
          # platforms: linux/amd64
          push: true
          tags: markjnt/palliroute-frontend-web
          cache-from: |
            type=registry,ref=docker.io/markjnt/palliroute-frontend-web:buildcache
          cache-to: |
            type=registry,ref=docker.io/markjnt/palliroute-frontend-web:buildcache,mode=max

  build-frontend-pwa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Frontend-PWA Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/frontend_pwa.Dockerfile
          platforms: linux/amd64,linux/arm64
          # Für noch schnellere Builds: nur linux/amd64 verwenden
          # platforms: linux/amd64
          push: true
          tags: markjnt/palliroute-frontend-pwa
          cache-from: |
            type=registry,ref=docker.io/markjnt/palliroute-frontend-pwa:buildcache
          cache-to: |
            type=registry,ref=docker.io/markjnt/palliroute-frontend-pwa:buildcache,mode=max

  deploy:
    runs-on: self-hosted
    needs: [build-backend-api, build-backend-scheduler, build-frontend-web, build-frontend-pwa]
    steps:
      - name: Pull & restart
        run: |
          cd "$HOME/PalliRoute"
          docker compose pull
          docker compose up -d
          docker image prune -f